
#source	"files/lab12/big-input.txt"

	' * RecordType pair (offset 0)
	' * ArrayType acme (offset 3)
	' * ArrayType fibonacci (offset 11)

' Invocation to the main function
call main
halt


#line	14
	' * Function Definition
	p:
	' * Parameters
	' * Local variables
	enter	0
	ret	0, 0, 0
#line	16
	' * Function Definition
	f:
	' * Parameters
	' * real r (offset 6)
	' * int e (offset 4)
	' * Local variables
	' * real real (offset -4)
	' * char c (offset -5)
	' * int result (offset -7)
	enter	7
#line	20
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-4
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	6
	addi
	loadf
	' * Value  of real literal
	pushf	10.0
	mulf
	storef
#line	21
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-5
	addi
	' * Value  of char literal
	pushb	48
	storeb
	' * If statement
#line	22
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	4
	addi
	loadi
	' * Value  of int literal
	pushi	256
	lti
	jz	label0
	' * Body of the if branch
#line	23
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-5
	addi
	' * Value  of Cast
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	4
	addi
	loadi
	i2b
	storeb
#line	24
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-7
	addi
	' * Value  of Cast
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	storei
	jmp	label1
	label0:
	' * Body of the else branch
#line	27
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-7
	addi
	' * Value  of Cast
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadf
	f2i
	storei
	' * LOG:Assignment [expRight=Cast [exp=Variable [name=real, line=27, column=19], lValue=false, type=IntType [line=-1, column=-1], line=27, column=14], expLeft=Variable [name=result, line=27, column=5], lValue=false, line=27, column=5]
	label1:
#line	28
	' * Return
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-7
	addi
	loadi
	ret	2, 7, 6
#line	31
	' * Function Definition
	initialize:
	' * Parameters
	' * Local variables
	' * int i (offset -2)
	enter	2
#line	33
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value  of int literal
	pushi	0
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	0
	pushi	2
	muli
	addi
	' * Value  of int literal
	pushi	0
	storei
#line	34
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value  of int literal
	pushi	0
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	' * Value  of int literal
	pushi	1
	storei
#line	35
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value  of int literal
	pushi	0
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	2
	pushi	2
	muli
	addi
	' * Value  of int literal
	pushi	1
	storei
#line	36
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value  of int literal
	pushi	1
	storei
	' * While
#line	37
	label2:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	8
	lti
	jz	label3
	' * Body of the while statement
#line	38
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	0
	pushi	2
	muli
	addi
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	subi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	loadi
	storei
#line	39
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	subi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	2
	pushi	2
	muli
	addi
	loadi
	storei
#line	40
	' * Assignment statement
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	2
	pushi	2
	muli
	addi
	' * Value of arithmetic
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	0
	pushi	2
	muli
	addi
	loadi
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	loadi
	addi
	storei
#line	41
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label2
	label3:
	ret	0, 2, 0
#line	47
	' * Function Definition
	main:
	' * Parameters
	' * Local variables
	' * int i (offset -2)
	' * int j (offset -4)
	enter	4
#line	49
	' * Execute functinvocation
	call	p
#line	50
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value  of int literal
	pushi	0
	storei
#line	51
	' * Assignment statement
	' * Address Field Accessing
	' * Address Variable
	pusha	0
	pushi	2
	addi
	' * Value  of char literal
	pushb	48
	storeb
#line	52
	' * Assignment statement
	' * Address Field Accessing
	' * Address Variable
	pusha	0
	pushi	0
	addi
	' * Value  of Cast
	' * Value  of char literal
	pushb	48
	b2i
	storei
#line	55
	' * Write
	' * Value  of function invocation expr
	' * Value  of Cast
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	i2f
	' * Value  of Cast
	' * Value  of field Access Expression
	' * Address Field Accessing
	' * Address Variable
	pusha	0
	pushi	2
	addi
	loadb
	b2i
	call	f
	outi
#line	55
	' * Write
	' * Value  of char literal
	pushb	10
	outb
#line	56
	' * Execute functinvocation
	' * Value  of real literal
	pushf	1.3
	' * Value  of int literal
	pushi	2
	call	f
	popi
#line	58
	' * Execute functinvocation
	call	initialize
#line	59
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value  of int literal
	pushi	0
	storei
	' * While
#line	60
	label4:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	8
	lti
	jz	label5
	' * Body of the while statement
#line	62
	' * Write
	' * Value  of char literal
	pushb	40
	outb
#line	62
	' * Write
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	outi
#line	62
	' * Write
	' * Value  of char literal
	pushb	41
	outb
#line	62
	' * Write
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	0
	pushi	2
	muli
	addi
	loadi
	outi
#line	62
	' * Write
	' * Value  of char literal
	pushb	43
	outb
#line	62
	' * Write
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	loadi
	outi
#line	62
	' * Write
	' * Value  of char literal
	pushb	61
	outb
#line	62
	' * Write
	' * Value  of indexing
	' * Address Indexing
	' * Address Indexing
	' * Address Variable
	pusha	11
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	' * Value  of int literal
	pushi	2
	pushi	2
	muli
	addi
	loadi
	outi
#line	62
	' * Write
	' * Value  of char literal
	pushb	10
	outb
#line	65
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label4
	label5:
#line	68
	' * Assignment statement
	' * Address Field Accessing
	' * Address Indexing
	' * Address Field Accessing
	' * Address Indexing
	' * Address Variable
	pusha	3
	' * Value  of int literal
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	' * Value  of int literal
	pushi	56
	storei
#line	70
	' * Write
	' * Value  of field Access Expression
	' * Address Field Accessing
	' * Address Indexing
	' * Address Field Accessing
	' * Address Indexing
	' * Address Variable
	pusha	3
	' * Value  of int literal
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	' * Value  of int literal
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi
#line	70
	' * Write
	' * Value  of char literal
	pushb	10
	outb
#line	71
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value  of int literal
	pushi	0
	storei
	' * While
#line	72
	label6:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	2
	lti
	jz	label7
	' * Body of the while statement
#line	73
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-4
	addi
	' * Value  of int literal
	pushi	0
	storei
	' * While
#line	74
	label8:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	' * Value  of int literal
	pushi	2
	lti
	jz	label9
	' * Body of the while statement
#line	75
	' * Assignment statement
	' * Address Field Accessing
	' * Address Indexing
	' * Address Field Accessing
	' * Address Indexing
	' * Address Variable
	pusha	3
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	addi
	storei
#line	76
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-4
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label8
	label9:
#line	78
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label6
	label7:
#line	82
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value  of int literal
	pushi	0
	storei
	' * While
#line	83
	label10:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	2
	lti
	jz	label11
	' * Body of the while statement
#line	84
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-4
	addi
	' * Value  of int literal
	pushi	0
	storei
	' * While
#line	85
	label12:
	' * Value  of comparison
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	' * Value  of int literal
	pushi	2
	lti
	jz	label13
	' * Body of the while statement
#line	87
	' * Write
	' * Value  of field Access Expression
	' * Address Field Accessing
	' * Address Indexing
	' * Address Field Accessing
	' * Address Indexing
	' * Address Variable
	pusha	3
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi
#line	87
	' * Write
	' * Value  of char literal
	pushb	32
	outb
#line	88
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-4
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-4
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label12
	label13:
#line	90
	' * Assignment statement
	' * Address Variable
	push	bp
	pushi	-2
	addi
	' * Value of arithmetic
	' * Value of variable
	' * Address Variable
	push	bp
	pushi	-2
	addi
	loadi
	' * Value  of int literal
	pushi	1
	addi
	storei
	jmp	label10
	label11:
	ret	0, 4, 0
